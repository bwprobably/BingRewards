# initial checkin
# ie:  coverage erase; docker rm -f jet-bing-test-reports|| jet steps
- name: bing serial
  type: serial
  tags: master
  services:
    - bing
    - bing-test
  steps:
    - name: setup
      command: env
    - name: health tests
      type: parallel
      steps:
        - name: file detections
          type: parallel
          steps:
            - name: files
              command: ls -al /usr/src/app
            - name: check result
              command: ls -al /src/
            - name: main test
              command: python /usr/src/app/main.py -h

# jet steps --debug
- name: container tests
  type: serial
  tags: tests
  service: bing-test
  steps:
    - name: results
      command: bash -c "/bin/true || mkdir /src/result"
    - name: decrypt and run
      command: bash -c "cd /src && openssl aes-256-cbc -d -in config.xml.encrypted.1 -k ${KEY} -out config.xml"
    - name: unittests
      command: bash -c "cd /src && nosetests -v --processes=4 --process-timeout=120 -c nose.config test/*.py"
    - name: reports
      command: bash -c "cd /src && mv .coverage .coverage.1 && coverage run ./mpmain.py 4 config.xml"
    - name: cov files
      command: bash -c "ls -al /src/.*"
    - name: coveralls
      command: bash -c "cd /src && coverage combine --debug data && coverage report --omit 'mpmain.py,pkg,pkg/queryGenerator' --debug data && coveralls --rcfile=/usr/src/app/.coveragerc"
    - name: cov files after
      command: bash -c "ls -al /src/.*"
#  - name: Test dockercfg Generator
#    service: dockercfg_test
#    type: push
#    image_name: 870119404647.dkr.ecr.us-east-1.amazonaws.com/codeship-testing
#    registry: https://870119404647.dkr.ecr.us-east-1.amazonaws.com
#    dockercfg_service: dockercfg_test_generator
